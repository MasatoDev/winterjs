{
  "version": 3,
  "sources": ["../bundle-YQWXdC/checked-fetch.js", "../../../../../../../../../Users/xorcist/.nvm/versions/node/v20.7.0/lib/node_modules/wrangler/templates/middleware/common.ts", "../../../../../../../../../Users/xorcist/.nvm/versions/node/v20.7.0/lib/node_modules/wrangler/templates/middleware/loader-sw.ts", "../../../../../../../../../Users/xorcist/.nvm/versions/node/v20.7.0/lib/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-YQWXdC/middleware-insertion-facade.js", "../../../js-test-app/dist/bundle.js"],
  "sourceRoot": "/Volumes/Work/Projects/Wasmer/winterjs/test-suite/.wrangler/tmp/dev-5BjvBj",
  "sourcesContent": ["const urls = new Set();\n\nfunction checkURL(request, init) {\n\tconst url =\n\t\trequest instanceof URL\n\t\t\t? request\n\t\t\t: new URL(\n\t\t\t\t\t(typeof request === \"string\"\n\t\t\t\t\t\t? new Request(request, init)\n\t\t\t\t\t\t: request\n\t\t\t\t\t).url\n\t\t\t  );\n\tif (url.port && url.port !== \"443\" && url.protocol === \"https:\") {\n\t\tif (!urls.has(url.toString())) {\n\t\t\turls.add(url.toString());\n\t\t\tconsole.warn(\n\t\t\t\t`WARNING: known issue with \\`fetch()\\` requests to custom HTTPS ports in published Workers:\\n` +\n\t\t\t\t\t` - ${url.toString()} - the custom port will be ignored when the Worker is published using the \\`wrangler deploy\\` command.\\n`\n\t\t\t);\n\t\t}\n\t}\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\tconst [request, init] = argArray;\n\t\tcheckURL(request, init);\n\t\treturn Reflect.apply(target, thisArg, argArray);\n\t},\n});\n", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "import {\n\tAwaitable,\n\tDispatcher,\n\tIncomingRequest,\n\tMiddleware,\n\t__facade_invoke__,\n\t__facade_register__,\n\t__facade_registerInternal__,\n} from \"./common\";\nexport { __facade_register__, __facade_registerInternal__ };\n\n// Miniflare 2's `EventTarget` follows the spec and doesn't allow exceptions to\n// be caught by `dispatchEvent`. Instead it has a custom `ThrowingEventTarget`\n// class that rethrows errors from event listeners in `dispatchEvent`.\n// We'd like errors to be propagated to the top-level `addEventListener`, so\n// we'd like to use `ThrowingEventTarget`. Unfortunately, `ThrowingEventTarget`\n// isn't exposed on the global scope, but `WorkerGlobalScope` (which extends\n// `ThrowingEventTarget`) is. Therefore, we get at it in this nasty way.\nlet __FACADE_EVENT_TARGET__: EventTarget;\nif ((globalThis as any).MINIFLARE) {\n\t__FACADE_EVENT_TARGET__ = new (Object.getPrototypeOf(WorkerGlobalScope))();\n} else {\n\t__FACADE_EVENT_TARGET__ = new EventTarget();\n}\n\nfunction __facade_isSpecialEvent__(\n\ttype: string\n): type is \"fetch\" | \"scheduled\" {\n\treturn type === \"fetch\" || type === \"scheduled\";\n}\nconst __facade__originalAddEventListener__ = globalThis.addEventListener;\nconst __facade__originalRemoveEventListener__ = globalThis.removeEventListener;\nconst __facade__originalDispatchEvent__ = globalThis.dispatchEvent;\n\nglobalThis.addEventListener = function (type, listener, options) {\n\tif (__facade_isSpecialEvent__(type)) {\n\t\t__FACADE_EVENT_TARGET__.addEventListener(\n\t\t\ttype,\n\t\t\tlistener as EventListenerOrEventListenerObject,\n\t\t\toptions\n\t\t);\n\t} else {\n\t\t__facade__originalAddEventListener__(type, listener, options);\n\t}\n};\nglobalThis.removeEventListener = function (type, listener, options) {\n\tif (__facade_isSpecialEvent__(type)) {\n\t\t__FACADE_EVENT_TARGET__.removeEventListener(\n\t\t\ttype,\n\t\t\tlistener as EventListenerOrEventListenerObject,\n\t\t\toptions\n\t\t);\n\t} else {\n\t\t__facade__originalRemoveEventListener__(type, listener, options);\n\t}\n};\nglobalThis.dispatchEvent = function (event) {\n\tif (__facade_isSpecialEvent__(event.type)) {\n\t\treturn __FACADE_EVENT_TARGET__.dispatchEvent(event);\n\t} else {\n\t\treturn __facade__originalDispatchEvent__(event);\n\t}\n};\n\ndeclare global {\n\tvar addMiddleware: typeof __facade_register__;\n\tvar addMiddlewareInternal: typeof __facade_registerInternal__;\n}\nglobalThis.addMiddleware = __facade_register__;\nglobalThis.addMiddlewareInternal = __facade_registerInternal__;\n\nconst __facade_waitUntil__ = Symbol(\"__facade_waitUntil__\");\nconst __facade_response__ = Symbol(\"__facade_response__\");\nconst __facade_dispatched__ = Symbol(\"__facade_dispatched__\");\n\nclass __Facade_ExtendableEvent__ extends Event {\n\t[__facade_waitUntil__]: Awaitable<unknown>[] = [];\n\n\twaitUntil(promise: Awaitable<any>) {\n\t\tif (!(this instanceof __Facade_ExtendableEvent__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\tthis[__facade_waitUntil__].push(promise);\n\t}\n}\n\ninterface FetchEventInit extends EventInit {\n\trequest: Request;\n\tpassThroughOnException: FetchEvent[\"passThroughOnException\"];\n}\n\nclass __Facade_FetchEvent__ extends __Facade_ExtendableEvent__ {\n\t#request: Request;\n\t#passThroughOnException: FetchEvent[\"passThroughOnException\"];\n\t[__facade_response__]?: Awaitable<Response>;\n\t[__facade_dispatched__] = false;\n\n\tconstructor(type: \"fetch\", init: FetchEventInit) {\n\t\tsuper(type);\n\t\tthis.#request = init.request;\n\t\tthis.#passThroughOnException = init.passThroughOnException;\n\t}\n\n\tget request() {\n\t\treturn this.#request;\n\t}\n\n\trespondWith(response: Awaitable<Response>) {\n\t\tif (!(this instanceof __Facade_FetchEvent__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\tif (this[__facade_response__] !== undefined) {\n\t\t\tthrow new DOMException(\n\t\t\t\t\"FetchEvent.respondWith() has already been called; it can only be called once.\",\n\t\t\t\t\"InvalidStateError\"\n\t\t\t);\n\t\t}\n\t\tif (this[__facade_dispatched__]) {\n\t\t\tthrow new DOMException(\n\t\t\t\t\"Too late to call FetchEvent.respondWith(). It must be called synchronously in the event handler.\",\n\t\t\t\t\"InvalidStateError\"\n\t\t\t);\n\t\t}\n\t\tthis.stopImmediatePropagation();\n\t\tthis[__facade_response__] = response;\n\t}\n\n\tpassThroughOnException() {\n\t\tif (!(this instanceof __Facade_FetchEvent__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#passThroughOnException();\n\t}\n}\n\ninterface ScheduledEventInit extends EventInit {\n\tscheduledTime: number;\n\tcron: string;\n\tnoRetry: ScheduledEvent[\"noRetry\"];\n}\n\nclass __Facade_ScheduledEvent__ extends __Facade_ExtendableEvent__ {\n\t#scheduledTime: number;\n\t#cron: string;\n\t#noRetry: ScheduledEvent[\"noRetry\"];\n\n\tconstructor(type: \"scheduled\", init: ScheduledEventInit) {\n\t\tsuper(type);\n\t\tthis.#scheduledTime = init.scheduledTime;\n\t\tthis.#cron = init.cron;\n\t\tthis.#noRetry = init.noRetry;\n\t}\n\n\tget scheduledTime() {\n\t\treturn this.#scheduledTime;\n\t}\n\n\tget cron() {\n\t\treturn this.#cron;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledEvent__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\n__facade__originalAddEventListener__(\"fetch\", (event) => {\n\tconst ctx: ExecutionContext = {\n\t\twaitUntil: event.waitUntil.bind(event),\n\t\tpassThroughOnException: event.passThroughOnException.bind(event),\n\t};\n\n\tconst __facade_sw_dispatch__: Dispatcher = function (type, init) {\n\t\tif (type === \"scheduled\") {\n\t\t\tconst facadeEvent = new __Facade_ScheduledEvent__(\"scheduled\", {\n\t\t\t\tscheduledTime: Date.now(),\n\t\t\t\tcron: init.cron ?? \"\",\n\t\t\t\tnoRetry() {},\n\t\t\t});\n\n\t\t\t__FACADE_EVENT_TARGET__.dispatchEvent(facadeEvent);\n\t\t\tevent.waitUntil(Promise.all(facadeEvent[__facade_waitUntil__]));\n\t\t}\n\t};\n\n\tconst __facade_sw_fetch__: Middleware = function (request, _env, ctx) {\n\t\tconst facadeEvent = new __Facade_FetchEvent__(\"fetch\", {\n\t\t\trequest,\n\t\t\tpassThroughOnException: ctx.passThroughOnException,\n\t\t});\n\n\t\t__FACADE_EVENT_TARGET__.dispatchEvent(facadeEvent);\n\t\tfacadeEvent[__facade_dispatched__] = true;\n\t\tevent.waitUntil(Promise.all(facadeEvent[__facade_waitUntil__]));\n\n\t\tconst response = facadeEvent[__facade_response__];\n\t\tif (response === undefined) {\n\t\t\tthrow new Error(\"No response!\"); // TODO: proper error message\n\t\t}\n\t\treturn response;\n\t};\n\n\tevent.respondWith(\n\t\t__facade_invoke__(\n\t\t\tevent.request as IncomingRequest,\n\t\t\tglobalThis,\n\t\t\tctx,\n\t\t\t__facade_sw_dispatch__,\n\t\t\t__facade_sw_fetch__\n\t\t)\n\t);\n});\n\n__facade__originalAddEventListener__(\"scheduled\", (event) => {\n\tconst facadeEvent = new __Facade_ScheduledEvent__(\"scheduled\", {\n\t\tscheduledTime: event.scheduledTime,\n\t\tcron: event.cron,\n\t\tnoRetry: event.noRetry.bind(event),\n\t});\n\n\t__FACADE_EVENT_TARGET__.dispatchEvent(facadeEvent);\n\tevent.waitUntil(Promise.all(facadeEvent[__facade_waitUntil__]));\n});\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\nexport const wrap = undefined;\n", "import { __facade_registerInternal__ } from \"/Users/xorcist/.nvm/versions/node/v20.7.0/lib/node_modules/wrangler/templates/middleware/loader-sw.ts\";\nimport * as __MIDDLEWARE_0__ from \"/Users/xorcist/.nvm/versions/node/v20.7.0/lib/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n__facade_registerInternal__([__MIDDLEWARE_0__.default])", "async function e(e){try{try{new TextDecoder(\"invalid-encoding\");console.error(\"Failed: The constructor should throw a RangeError for an invalid encoding.\")}catch(e){if(!(e instanceof RangeError))throw new Error(\"Failed: The error thrown is not a RangeError.\");console.log(\"Passed: Constructor throws RangeError for invalid encoding as expected.\")}try{new TextDecoder(\"utf-8\")}catch(e){throw new Error(\"Failed: The constructor should not throw an error for a valid encoding.\")}try{let e=new TextDecoder(\"utf-8\"),t=\"\",r=\"This is the complete text from which we will take chunks.\";const o=function*(e){let t=0;for(;t<e.length;){const r=e.slice(t,t+10);t+=10;const o=(new TextEncoder).encode(r);yield o}}(r);for(let r=o.next();!r.done;r=o.next()){const o=r.value;t+=e.decode(o,{stream:!0})}if(t!==r)throw new Error(\"Failed: The decoded string does not match the source string.\")}catch(e){throw new Error(`Failed: ${e.message}`)}const e=new Uint8Array([255,255,255]);try{new TextDecoder(\"utf-8\",{fatal:!0}).decode(e),console.error(\"Failed: Decoding should throw a TypeError in fatal error mode.\")}catch(e){if(!(e instanceof TypeError))throw new Error(\"Failed: The error thrown is not a TypeError.\");console.log(\"Passed: TypeError thrown in fatal error mode as expected.\")}return new Response(\"All tests passed!\",{headers:{\"content-type\":\"text/plain\"}})}catch(e){return new Response(e.message,{status:500})}}function t(t){const r=new URL(t.url).pathname;return r.startsWith(\"/1-hello\")?async function(e){return new Response(\"hello\")}():r.startsWith(\"/2-blob\")?async function(e){try{const e=new Blob([\"Hello, world!\"],{type:\"text/plain\"}),t=await e.text();return new Response(t,{headers:{\"Content-Type\":e.type,\"Content-Length\":e.size.toString()}})}catch(e){return new Response(e.message,{status:500})}}():r.startsWith(\"/3-headers\")?async function(e){const t=new URL(e.url).pathname,r=new Headers({\"Content-Type\":\"text/plain\",\"X-Custom-Header\":\"CustomValue\"});if(t.includes(\"/append\"))return r.append(\"X-Appended-Header\",\"AppendedValue\"),new Response(\"Header appended\",{headers:r});if(t.includes(\"/delete\"))return r.delete(\"X-Custom-Header\"),new Response(\"Header deleted\",{headers:r});if(t.includes(\"/get\")){const e=r.get(\"Content-Type\");return new Response(`Content-Type is ${e}`,{headers:r})}if(t.includes(\"/has\")){const e=r.has(\"Content-Type\");return new Response(`Has Content-Type: ${e}`,{headers:r})}if(t.includes(\"/set\"))return r.set(\"Content-Type\",\"text/html\"),new Response(\"Content-Type set to text/html\",{headers:r});if(t.includes(\"/iterate\")){let e=\"\";for(const[t,o]of r)e+=`${t}: ${o}\\n`;return new Response(`Headers iterated:\\n${e}`,{headers:r})}let o=\"\";for(const[e,t]of r)o+=`${e}: ${t}\\n`;return new Response(`All Headers:\\n${o}`,{headers:r})}(t):r.startsWith(\"/4-request\")?async function(e){try{new Request(e)}catch(e){let t=\"Error while cloning the request\\n\";return t+=e.message,new Response(t,{status:500})}try{newRequest=new Request(newRequest,{method:\"POST\",headers:new Headers({\"X-Test-Header\":\"TestValue\"}),referrer:\"no-referrer\",mode:\"cors\",credentials:\"omit\",cache:\"default\",redirect:\"follow\",integrity:\"\",keepalive:!1,signal:null,duplex:\"half\",priority:\"high\"})}catch(e){let t=\"Error while modifying the request\\n\";return t+=e.message,new Response(t,{status:500})}try{newRequest.method,newRequest.url,[...newRequest.headers].reduce(((e,[t,r])=>(e[t]=r,e)),{}),newRequest.referrer,newRequest.referrerPolicy,newRequest.mode,newRequest.credentials,newRequest.cache,newRequest.redirect,newRequest.integrity,newRequest.keepalive,newRequest.isReloadNavigation,newRequest.isHistoryNavigation,newRequest.signal,newRequest.duplex}catch(e){let t=\"Error while constructing the response\\n\";return t+=e.message,new Response(t,{status:500})}return new Response(JSON.stringify(responseDetails,null,2),{headers:{\"Content-Type\":\"application/json\"}})}(t):r.startsWith(\"/5-response\")?async function(e){const t=\"https://example.com\",r={key:\"value\"},o=new Headers({\"X-Custom-Header\":\"Test\"});try{const e=new Response(\"body content\",{status:200,statusText:\"OK\",headers:o});if(200!==e.status)throw new Error(\"Status should be 200\");if(\"OK\"!==e.statusText)throw new Error('Status text should be \"OK\"');if(\"Test\"!==e.headers.get(\"X-Custom-Header\"))throw new Error(\"Custom header should be set\")}catch(e){let t=\"Error while basic construction of response\\n\";return t+=e.message,new Response(t,{status:500})}try{const e=Response.error();if(\"error\"!==e.type)throw new Error('Response type should be \"error\"');if(0!==e.status)throw new Error(\"Status for error response should be 0\")}catch(e){let t=\"Error while testing error response\\n\";return t+=e.message,new Response(t,{status:500})}try{const e=Response.redirect(t,301);if(301!==e.status)throw new Error(\"Redirect status should be 301\");if(e.headers.get(\"Location\")!==t)throw new Error(\"Location header should match the test URL\")}catch(e){let t=\"Error while testing redirect response\\n\";return t+=e.message,new Response(t,{status:500})}try{const e=Response.json(r),t=await e.json();if(JSON.stringify(t)!==JSON.stringify(r))throw new Error(\"Body data should match the test data\")}catch(e){let t=\"Error while testing JSON response\\n\";return t+=e.message,new Response(t,{status:500})}return new Response(\"All tests passed\",{headers:{\"Content-Type\":\"text/plain\"}})}():r.startsWith(\"/6-text-encoder\")?async function(e){try{const e=new TextEncoder;if(!e)throw new Error(\"TextEncoder constructor does not create an object.\");if(console.log(\"Passed: TextEncoder constructor creates an object as expected.\"),\"utf-8\"!==e.encoding)throw new Error(`Failed: TextEncoder 'encoding' attribute is not 'utf-8', it is '${e.encoding}'.`);console.log(\"Passed: TextEncoder 'encoding' attribute is 'utf-8' as expected.\");const t=\"Hello, world!\";if(!(e.encode(t)instanceof Uint8Array))throw new Error(\"Failed: TextEncoder 'encode' method does not return a Uint8Array.\");console.log(\"Passed: TextEncoder 'encode' method returns a Uint8Array as expected.\");const r=\"Hello, world!\";let o=new Uint8Array(3*r.length);const s=e.encodeInto(r,o);throw\"number\"==typeof s.read&&\"number\"==typeof s.written?new Error(\"Passed: TextEncoder 'encodeInto' method returns an object with 'read' and 'written' properties as expected.\"):new Error(\"Failed: TextEncoder 'encodeInto' method does not return the expected object.\")}catch(e){return new Response(e.message,{status:500})}}():r.startsWith(\"/7-text-decoder\")?e():r.startsWith(\"/8-url\")?async function(e){try{const e=new URL(\"https://example.org/foo?bar=baz#qux\");if(!e)throw new Error(\"URL constructor does not create an object.\");if(console.log(\"Passed: URL constructor creates an object as expected.\"),\"https:\"!==e.protocol)throw new Error(`Failed: URL 'protocol' attribute is not 'https:', it is '${e.protocol}'.`);if(console.log(\"Passed: URL 'protocol' attribute is 'https:' as expected.\"),\"example.org\"!==e.host)throw new Error(`Failed: URL 'host' attribute is not 'example.org', it is '${e.host}'.`);if(console.log(\"Passed: URL 'host' attribute is 'example.org' as expected.\"),\"/foo\"!==e.pathname)throw new Error(`Failed: URL 'pathname' attribute is not '/foo', it is '${e.pathname}'.`);if(console.log(\"Passed: URL 'pathname' attribute is '/foo' as expected.\"),\"?bar=baz\"!==e.search)throw new Error(`Failed: URL 'search' attribute is not 'bar=baz', it is '${e.search}'.`);if(console.log(\"Passed: URL 'search' attribute is 'bar=baz' as expected.\"),\"#qux\"!==e.hash)throw new Error(`Failed: URL 'hash' attribute is not 'qux', it is '${e.hash}'.`);if(console.log(\"Passed: URL 'hash' attribute is 'qux' as expected.\"),\"baz\"!==e.searchParams.get(\"bar\"))throw new Error(`Failed: URLSearchParams 'get' method does not return 'baz', it returns '${searchParams.get(\"bar\")}'.`);console.log(\"Passed: URLSearchParams 'get' method returns 'baz' as expected.\");try{if(!e.toJSON())throw new Error(\"URL 'toJSON' method does not return an object.\")}catch(e){throw new Error(\"Failed: URL 'toJSON' method does not return a json object.\")}try{const e=new URL(\"/path\",\"https://example.com\");console.log(`Base URL: ${e.href}`)}catch(e){throw new Error(\"Failed: URL constructor does not create an object with a base.\")}try{const e=new URL(\"https://example.com/base\"),t=new URL(\"path\",e);console.log(`New URL using base: ${t.href}`)}catch(e){throw new Error(\"Failed: URL constructor does not create an object with URL as its base.\")}try{const e=new URL(\"https://example.org/\uD83D\uDCA9\");console.log(`Unicode pathname: ${e.pathname}`)}catch(e){throw new Error(\"Failed: URL constructor does not create an object with unicode characters.\")}try{new URL(\"/path\")}catch(e){console.log(\"Caught exception for relative URL without base:\",e.message)}return new Response(\"All tests passed!\",{headers:{\"content-type\":\"text/plain\"}})}catch(e){return new Response(e.message,{status:500})}}():r.startsWith(\"/10-atob-btoa\")?async function(e){const t=(e,t)=>{if(!e)throw new Error(t||\"Assertion failed\")},r=(e,r,o)=>{t(e===r,o||`Expected ${r} but got ${e}`)};try{const e=\"Hello, world!\",o=\"SGVsbG8sIHdvcmxkIQ==\";r(btoa(e),o,\"btoa did not encode the string correctly\"),r(atob(o),e,\"atob did not decode the string correctly\");try{btoa(\"\\0\u0001\u0002\"),t(!0,\"btoa handled binary data without throwing error\")}catch(e){t(!1,\"btoa should not throw error with binary data\")}try{atob(\"Invalid base64 string\"),t(!1,\"atob should throw error with invalid base64 input\")}catch(e){t(!0,\"atob threw error as expected with invalid base64 input\")}return new Response(\"All Tests Passed!\",{headers:{\"content-type\":\"text/plain\"}})}catch(e){return new Response(e.message,{status:500})}}():new Response(\"Route Not Found\",{status:404})}addEventListener(\"fetch\",(e=>{e.respondWith(t(e.request))}));\n"],
  "mappings": "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",
  "names": ["newRequest", "ctx", "e", "e", "t", "r", "o"]
}
